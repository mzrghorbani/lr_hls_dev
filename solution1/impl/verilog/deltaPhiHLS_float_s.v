// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module deltaPhiHLS_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        phi1,
        guard_variable_for_f_i,
        guard_variable_for_f_o,
        guard_variable_for_f_o_ap_vld,
        n_i,
        n_o,
        n_o_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [31:0] phi1;
input  [0:0] guard_variable_for_f_i;
output  [0:0] guard_variable_for_f_o;
output   guard_variable_for_f_o_ap_vld;
input  [31:0] n_i;
output  [31:0] n_o;
output   n_o_ap_vld;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] guard_variable_for_f_o;
reg guard_variable_for_f_o_ap_vld;
reg[31:0] n_o;
reg n_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] phi1_read_reg_187;
reg   [31:0] phi1_read_reg_187_pp0_iter1_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter2_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter3_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter4_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter5_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter6_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter7_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter8_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter9_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter10_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter11_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter12_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter13_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter14_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter15_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter16_reg;
reg   [31:0] phi1_read_reg_187_pp0_iter17_reg;
wire   [0:0] grp_fu_59_p2;
reg   [0:0] tmp_1_reg_197;
wire   [31:0] select_ln32_fu_120_p3;
reg   [31:0] select_ln32_reg_202;
wire   [0:0] icmp_ln40_fu_144_p2;
reg   [0:0] icmp_ln40_reg_208;
reg   [0:0] icmp_ln40_reg_208_pp0_iter5_reg;
wire   [0:0] icmp_ln40_1_fu_150_p2;
reg   [0:0] icmp_ln40_1_reg_213;
reg   [0:0] icmp_ln40_1_reg_213_pp0_iter5_reg;
wire   [0:0] and_ln40_fu_160_p2;
reg   [0:0] and_ln40_reg_218;
reg   [0:0] and_ln40_reg_218_pp0_iter7_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter8_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter9_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter10_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter11_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter12_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter13_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter14_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter15_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter16_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter17_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter18_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter19_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter20_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter21_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter22_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter23_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter24_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter25_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter26_reg;
reg   [0:0] and_ln40_reg_218_pp0_iter27_reg;
reg   [0:0] guard_variable_for_f_1_reg_222;
reg   [0:0] guard_variable_for_f_1_reg_222_pp0_iter7_reg;
reg   [0:0] guard_variable_for_f_1_reg_222_pp0_iter8_reg;
reg   [0:0] guard_variable_for_f_1_reg_222_pp0_iter9_reg;
reg   [0:0] guard_variable_for_f_1_reg_222_pp0_iter10_reg;
wire   [31:0] grp_fu_54_p2;
reg   [31:0] tmp_3_i_reg_231;
wire   [31:0] grp_fu_45_p2;
reg   [31:0] tmp_4_i_reg_236;
reg    ap_block_pp0_stage0_subdone;
reg   [31:0] ap_phi_mux_p_0_i_phi_fu_39_p4;
reg   [31:0] ap_phi_reg_pp0_iter28_p_0_i_reg_36;
wire   [31:0] ap_phi_reg_pp0_iter0_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter1_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter2_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter3_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter4_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter5_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter6_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter7_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter8_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter9_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter10_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter11_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter12_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter13_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter14_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter15_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter16_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter17_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter18_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter19_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter20_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter21_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter22_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter23_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter24_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter25_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter26_p_0_i_reg_36;
reg   [31:0] ap_phi_reg_pp0_iter27_p_0_i_reg_36;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_49_p2;
wire   [31:0] bitcast_ln32_fu_70_p1;
wire   [7:0] tmp_fu_73_p4;
wire   [22:0] trunc_ln32_fu_83_p1;
wire   [0:0] icmp_ln32_1_fu_93_p2;
wire   [0:0] icmp_ln32_fu_87_p2;
wire   [0:0] or_ln32_fu_99_p2;
wire   [31:0] xor_ln33_fu_110_p2;
wire   [0:0] and_ln32_fu_105_p2;
wire   [31:0] bitcast_ln33_fu_116_p1;
wire   [31:0] bitcast_ln40_fu_127_p1;
wire   [7:0] tmp_2_fu_130_p4;
wire   [22:0] trunc_ln40_fu_140_p1;
wire   [0:0] or_ln40_fu_156_p2;
wire   [0:0] grp_fu_65_p2;
reg    grp_fu_45_ce;
reg    grp_fu_49_ce;
reg    grp_fu_54_ce;
reg    grp_fu_59_ce;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_65_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to27;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_336;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
end

LR_top_fsub_32ns_32ns_32_10_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LR_top_fsub_32ns_32ns_32_10_full_dsp_1_U1148(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(phi1_read_reg_187_pp0_iter17_reg),
    .din1(tmp_3_i_reg_231),
    .ce(grp_fu_45_ce),
    .dout(grp_fu_45_p2)
);

LR_top_fmul_32ns_32ns_32_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LR_top_fmul_32ns_32ns_32_6_max_dsp_1_U1149(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(phi1_read_reg_187_pp0_iter5_reg),
    .din1(32'd1042479491),
    .ce(grp_fu_49_ce),
    .dout(grp_fu_49_p2)
);

LR_top_fmul_32ns_32ns_32_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LR_top_fmul_32ns_32ns_32_6_max_dsp_1_U1150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(n_i),
    .din1(32'd1086918619),
    .ce(grp_fu_54_ce),
    .dout(grp_fu_54_p2)
);

LR_top_fcmp_32ns_32ns_1_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LR_top_fcmp_32ns_32ns_1_3_1_U1151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(phi1),
    .din1(32'd0),
    .ce(grp_fu_59_ce),
    .opcode(5'd4),
    .dout(grp_fu_59_p2)
);

LR_top_fcmp_32ns_32ns_1_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
LR_top_fcmp_32ns_32ns_1_3_1_U1152(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln32_reg_202),
    .din1(32'd1078530011),
    .ce(grp_fu_65_ce),
    .opcode(5'd5),
    .dout(grp_fu_65_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_336)) begin
        if ((1'd1 == and_ln40_reg_218)) begin
            ap_phi_reg_pp0_iter8_p_0_i_reg_36 <= phi1_read_reg_187_pp0_iter6_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter8_p_0_i_reg_36 <= ap_phi_reg_pp0_iter7_p_0_i_reg_36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln40_reg_218 <= and_ln40_fu_160_p2;
        and_ln40_reg_218_pp0_iter10_reg <= and_ln40_reg_218_pp0_iter9_reg;
        and_ln40_reg_218_pp0_iter11_reg <= and_ln40_reg_218_pp0_iter10_reg;
        and_ln40_reg_218_pp0_iter12_reg <= and_ln40_reg_218_pp0_iter11_reg;
        and_ln40_reg_218_pp0_iter13_reg <= and_ln40_reg_218_pp0_iter12_reg;
        and_ln40_reg_218_pp0_iter14_reg <= and_ln40_reg_218_pp0_iter13_reg;
        and_ln40_reg_218_pp0_iter15_reg <= and_ln40_reg_218_pp0_iter14_reg;
        and_ln40_reg_218_pp0_iter16_reg <= and_ln40_reg_218_pp0_iter15_reg;
        and_ln40_reg_218_pp0_iter17_reg <= and_ln40_reg_218_pp0_iter16_reg;
        and_ln40_reg_218_pp0_iter18_reg <= and_ln40_reg_218_pp0_iter17_reg;
        and_ln40_reg_218_pp0_iter19_reg <= and_ln40_reg_218_pp0_iter18_reg;
        and_ln40_reg_218_pp0_iter20_reg <= and_ln40_reg_218_pp0_iter19_reg;
        and_ln40_reg_218_pp0_iter21_reg <= and_ln40_reg_218_pp0_iter20_reg;
        and_ln40_reg_218_pp0_iter22_reg <= and_ln40_reg_218_pp0_iter21_reg;
        and_ln40_reg_218_pp0_iter23_reg <= and_ln40_reg_218_pp0_iter22_reg;
        and_ln40_reg_218_pp0_iter24_reg <= and_ln40_reg_218_pp0_iter23_reg;
        and_ln40_reg_218_pp0_iter25_reg <= and_ln40_reg_218_pp0_iter24_reg;
        and_ln40_reg_218_pp0_iter26_reg <= and_ln40_reg_218_pp0_iter25_reg;
        and_ln40_reg_218_pp0_iter27_reg <= and_ln40_reg_218_pp0_iter26_reg;
        and_ln40_reg_218_pp0_iter7_reg <= and_ln40_reg_218;
        and_ln40_reg_218_pp0_iter8_reg <= and_ln40_reg_218_pp0_iter7_reg;
        and_ln40_reg_218_pp0_iter9_reg <= and_ln40_reg_218_pp0_iter8_reg;
        guard_variable_for_f_1_reg_222_pp0_iter10_reg <= guard_variable_for_f_1_reg_222_pp0_iter9_reg;
        guard_variable_for_f_1_reg_222_pp0_iter7_reg <= guard_variable_for_f_1_reg_222;
        guard_variable_for_f_1_reg_222_pp0_iter8_reg <= guard_variable_for_f_1_reg_222_pp0_iter7_reg;
        guard_variable_for_f_1_reg_222_pp0_iter9_reg <= guard_variable_for_f_1_reg_222_pp0_iter8_reg;
        icmp_ln40_1_reg_213 <= icmp_ln40_1_fu_150_p2;
        icmp_ln40_1_reg_213_pp0_iter5_reg <= icmp_ln40_1_reg_213;
        icmp_ln40_reg_208 <= icmp_ln40_fu_144_p2;
        icmp_ln40_reg_208_pp0_iter5_reg <= icmp_ln40_reg_208;
        phi1_read_reg_187_pp0_iter10_reg <= phi1_read_reg_187_pp0_iter9_reg;
        phi1_read_reg_187_pp0_iter11_reg <= phi1_read_reg_187_pp0_iter10_reg;
        phi1_read_reg_187_pp0_iter12_reg <= phi1_read_reg_187_pp0_iter11_reg;
        phi1_read_reg_187_pp0_iter13_reg <= phi1_read_reg_187_pp0_iter12_reg;
        phi1_read_reg_187_pp0_iter14_reg <= phi1_read_reg_187_pp0_iter13_reg;
        phi1_read_reg_187_pp0_iter15_reg <= phi1_read_reg_187_pp0_iter14_reg;
        phi1_read_reg_187_pp0_iter16_reg <= phi1_read_reg_187_pp0_iter15_reg;
        phi1_read_reg_187_pp0_iter17_reg <= phi1_read_reg_187_pp0_iter16_reg;
        phi1_read_reg_187_pp0_iter2_reg <= phi1_read_reg_187_pp0_iter1_reg;
        phi1_read_reg_187_pp0_iter3_reg <= phi1_read_reg_187_pp0_iter2_reg;
        phi1_read_reg_187_pp0_iter4_reg <= phi1_read_reg_187_pp0_iter3_reg;
        phi1_read_reg_187_pp0_iter5_reg <= phi1_read_reg_187_pp0_iter4_reg;
        phi1_read_reg_187_pp0_iter6_reg <= phi1_read_reg_187_pp0_iter5_reg;
        phi1_read_reg_187_pp0_iter7_reg <= phi1_read_reg_187_pp0_iter6_reg;
        phi1_read_reg_187_pp0_iter8_reg <= phi1_read_reg_187_pp0_iter7_reg;
        phi1_read_reg_187_pp0_iter9_reg <= phi1_read_reg_187_pp0_iter8_reg;
        select_ln32_reg_202 <= select_ln32_fu_120_p3;
        tmp_1_reg_197 <= grp_fu_59_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_p_0_i_reg_36 <= ap_phi_reg_pp0_iter9_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_p_0_i_reg_36 <= ap_phi_reg_pp0_iter10_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_p_0_i_reg_36 <= ap_phi_reg_pp0_iter11_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_p_0_i_reg_36 <= ap_phi_reg_pp0_iter12_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_p_0_i_reg_36 <= ap_phi_reg_pp0_iter13_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_p_0_i_reg_36 <= ap_phi_reg_pp0_iter14_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_p_0_i_reg_36 <= ap_phi_reg_pp0_iter15_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_p_0_i_reg_36 <= ap_phi_reg_pp0_iter16_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_p_0_i_reg_36 <= ap_phi_reg_pp0_iter17_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_p_0_i_reg_36 <= ap_phi_reg_pp0_iter18_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_p_0_i_reg_36 <= ap_phi_reg_pp0_iter0_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_p_0_i_reg_36 <= ap_phi_reg_pp0_iter19_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter21_p_0_i_reg_36 <= ap_phi_reg_pp0_iter20_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter22_p_0_i_reg_36 <= ap_phi_reg_pp0_iter21_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter23_p_0_i_reg_36 <= ap_phi_reg_pp0_iter22_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter24_p_0_i_reg_36 <= ap_phi_reg_pp0_iter23_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter25_p_0_i_reg_36 <= ap_phi_reg_pp0_iter24_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter26_p_0_i_reg_36 <= ap_phi_reg_pp0_iter25_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter27_p_0_i_reg_36 <= ap_phi_reg_pp0_iter26_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter27 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter28_p_0_i_reg_36 <= ap_phi_reg_pp0_iter27_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_p_0_i_reg_36 <= ap_phi_reg_pp0_iter1_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_p_0_i_reg_36 <= ap_phi_reg_pp0_iter2_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_p_0_i_reg_36 <= ap_phi_reg_pp0_iter3_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_p_0_i_reg_36 <= ap_phi_reg_pp0_iter4_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_p_0_i_reg_36 <= ap_phi_reg_pp0_iter5_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_p_0_i_reg_36 <= ap_phi_reg_pp0_iter6_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_p_0_i_reg_36 <= ap_phi_reg_pp0_iter8_p_0_i_reg_36;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln40_fu_160_p2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        guard_variable_for_f_1_reg_222 <= guard_variable_for_f_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        phi1_read_reg_187 <= phi1;
        phi1_read_reg_187_pp0_iter1_reg <= phi1_read_reg_187;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln40_reg_218_pp0_iter16_reg) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_i_reg_231 <= grp_fu_54_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln40_reg_218_pp0_iter26_reg) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_i_reg_236 <= grp_fu_45_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter28 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0))) begin
        ap_idle_pp0_0to27 = 1'b1;
    end else begin
        ap_idle_pp0_0to27 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln40_reg_218_pp0_iter27_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        ap_phi_mux_p_0_i_phi_fu_39_p4 = tmp_4_i_reg_236;
    end else begin
        ap_phi_mux_p_0_i_phi_fu_39_p4 = ap_phi_reg_pp0_iter28_p_0_i_reg_36;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to27 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_45_ce = 1'b1;
    end else begin
        grp_fu_45_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_49_ce = 1'b1;
    end else begin
        grp_fu_49_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_54_ce = 1'b1;
    end else begin
        grp_fu_54_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_59_ce = 1'b1;
    end else begin
        grp_fu_59_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_65_ce = 1'b1;
    end else begin
        grp_fu_65_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (guard_variable_for_f_i == 1'd0) & (1'd0 == and_ln40_fu_160_p2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_ce))) begin
        guard_variable_for_f_o = 1'd1;
    end else begin
        guard_variable_for_f_o = guard_variable_for_f_i;
    end
end

always @ (*) begin
    if (((guard_variable_for_f_i == 1'd0) & (1'd0 == and_ln40_fu_160_p2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        guard_variable_for_f_o_ap_vld = 1'b1;
    end else begin
        guard_variable_for_f_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (guard_variable_for_f_1_reg_222_pp0_iter10_reg == 1'd0) & (1'd0 == and_ln40_reg_218_pp0_iter10_reg) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_ce))) begin
        n_o = grp_fu_49_p2;
    end else begin
        n_o = n_i;
    end
end

always @ (*) begin
    if (((guard_variable_for_f_1_reg_222_pp0_iter10_reg == 1'd0) & (1'd0 == and_ln40_reg_218_pp0_iter10_reg) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        n_o_ap_vld = 1'b1;
    end else begin
        n_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln32_fu_105_p2 = (tmp_1_reg_197 & or_ln32_fu_99_p2);

assign and_ln40_fu_160_p2 = (or_ln40_fu_156_p2 & grp_fu_65_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_336 = ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_p_0_i_reg_36 = 'bx;

assign ap_return = ap_phi_mux_p_0_i_phi_fu_39_p4;

assign bitcast_ln32_fu_70_p1 = phi1_read_reg_187_pp0_iter2_reg;

assign bitcast_ln33_fu_116_p1 = xor_ln33_fu_110_p2;

assign bitcast_ln40_fu_127_p1 = select_ln32_reg_202;

assign icmp_ln32_1_fu_93_p2 = ((trunc_ln32_fu_83_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_87_p2 = ((tmp_fu_73_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln40_1_fu_150_p2 = ((trunc_ln40_fu_140_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_144_p2 = ((tmp_2_fu_130_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln32_fu_99_p2 = (icmp_ln32_fu_87_p2 | icmp_ln32_1_fu_93_p2);

assign or_ln40_fu_156_p2 = (icmp_ln40_reg_208_pp0_iter5_reg | icmp_ln40_1_reg_213_pp0_iter5_reg);

assign select_ln32_fu_120_p3 = ((and_ln32_fu_105_p2[0:0] === 1'b1) ? bitcast_ln33_fu_116_p1 : phi1_read_reg_187_pp0_iter2_reg);

assign tmp_2_fu_130_p4 = {{bitcast_ln40_fu_127_p1[30:23]}};

assign tmp_fu_73_p4 = {{bitcast_ln32_fu_70_p1[30:23]}};

assign trunc_ln32_fu_83_p1 = bitcast_ln32_fu_70_p1[22:0];

assign trunc_ln40_fu_140_p1 = bitcast_ln40_fu_127_p1[22:0];

assign xor_ln33_fu_110_p2 = (bitcast_ln32_fu_70_p1 ^ 32'd2147483648);

endmodule //deltaPhiHLS_float_s
